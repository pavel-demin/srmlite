# -*- Makefile -*-
# NOTE: this file requires GNU Make.
#
#PLAT = unix
#PRIV = install-private-headers
#
# Linux:
#LDFLAGS = -L/usr/X11R6/lib -lX11 -ldl -lm # -lpthread
#
# Mac OS X:
#LDFLAGS = -framework CoreFoundation -L/usr/X11R6/lib -lX11 -weak-lXss -lXext
#LDFLAGS = -framework CoreFoundation -framework Carbon -framework IOKit
#LDSTRIP = -x

EXTDIR = ../../../../8.x
STATIC = --disable-shared --enable-static
OUTDIR = $(shell pwd)/build
OBJ    = $(OUTDIR)/zvfs$O $(OUTDIR)/g2lite$O $(OUTDIR)/gssctx$O
CLIOBJ ?= $(OBJ) $(OUTDIR)/tclAppInit$O
TCLDIR = --with-tcl=$(OUTDIR)/lib --prefix=$(OUTDIR) --exec-prefix=$(OUTDIR)
STRIP ?= strip
UPX   ?= :
O     ?=.o
A     ?=.a
SO    ?=.so

OPENSSL_OPTS = --prefix=$(OUTDIR) --openssldir=$(OUTDIR) no-threads no-shared no-engines no-hw

GLOBUS_FLAVOR = gcc64
GLOBUS_OPTS = --prefix=$(OUTDIR) --with-flavor=$(GLOBUS_FLAVOR) --with-buildopts="--disable-shared --enable-static"

TCL_OPTS = --disable-threads
VFS_OPTS = --disable-threads
TDOM_OPTS = --disable-threads
TCLX_OPTS = --disable-threads

tclkit-cli$(EXE): kit-cli$(EXE) ../../setupvfs.tcl build/files
	cp kit-cli$(EXE) $@ && $(STRIP) $@ && $(UPX) $@
	./kit-cli -init- ../../setupvfs.tcl $(KIT_OPTS) $@ cli

kit-cli$(EXE): build/tcl build/tclvfs \
	build/globus build/tdom build/starfish \
	build/tclx build/tcllib $(CLIOBJ)
	$(CC) -o $@ $(CFLAGS) ../../kitInit.c $(CLIOBJ) \
	  -Ibuild/include -DKIT_LITE -DSTATIC_BUILD \
	  build/lib/vfs1*/*vfs1*$A \
	  build/lib/tdom0*/*tdom0*$A \
	  build/lib/starfish1*/libstarfish1*$A \
	  build/lib/tclx8*/libtclx8*$A \
	  build/lib/*tclstub8*$A build/lib/*tcl8*$A \
	  build/lib64/libglobus_gss_assist$A \
	  build/lib64/libglobus_gssapi_gsi$A \
	  build/lib64/libglobus_gsi_proxy_core$A \
	  build/lib64/libglobus_gsi_credential$A \
	  build/lib64/libglobus_gsi_callback$A \
	  build/lib64/libglobus_oldgaa$A \
	  build/lib64/libglobus_gsi_sysconfig$A \
	  build/lib64/libglobus_gsi_cert_utils$A \
	  build/lib64/libglobus_openssl$A \
	  build/lib64/libglobus_openssl_error$A \
	  build/lib64/libglobus_callout$A \
	  build/lib64/libglobus_proxy_ssl$A \
	  build/lib64/libglobus_common$A \
	  build/lib/libssl$A build/lib/libcrypto$A \
	  $(LDFLAGS)

getuser$(EXE): build/globus ../../getuser.c
	$(CC) -o $@ $(CFLAGS) ../../getuser.c \
	  -Ibuild/include -Ibuild/include/globus \
	  -Ibuild/include/globus/$(GLOBUS_FLAVOR) \
	  build/lib64/libglobus_gss_assist$A \
	  build/lib64/libglobus_gssapi_gsi$A \
	  build/lib64/libglobus_gsi_proxy_core$A \
	  build/lib64/libglobus_gsi_credential$A \
	  build/lib64/libglobus_gsi_callback$A \
	  build/lib64/libglobus_oldgaa$A \
	  build/lib64/libglobus_gsi_sysconfig$A \
	  build/lib64/libglobus_gsi_cert_utils$A \
	  build/lib64/libglobus_openssl$A \
	  build/lib64/libglobus_openssl_error$A \
	  build/lib64/libglobus_callout$A \
	  build/lib64/libglobus_proxy_ssl$A \
	  build/lib64/libglobus_common$A \
	  build/lib/libssl$A build/lib/libcrypto$A \
	  $(LDFLAGS) && $(STRIP) $@

build/files:
	mkdir -p $@ && cd $@ && ln -s ../../../../files/* .

build/tcl:
	mkdir -p $@ && cd $@ && CFLAGS="$(CFLAGS)" && export CFLAGS && \
	  sh ../../../tcl/$(PLAT)/configure $(STATIC) $(TCL_OPTS) \
	    --prefix=$(OUTDIR) --exec-prefix=$(OUTDIR) && \
	  $(MAKE) install-binaries install-libraries $(PRIV)

build/tclvfs: build/tcl
	mkdir -p $@ && cd $@ && CFLAGS="$(CFLAGS)" && export CFLAGS && \
	  sh $(EXTDIR)/tclvfs/configure $(STATIC) $(TCLDIR) $(VFS_OPTS) && \
	  $(MAKE) install

build/openssl: build/tcl
	cp -R ../../8.x/openssl/. $@
	cd $@ && CFLAGS="$(CFLAGS)" && export CFLAGS && \
	  sh ./config $(OPENSSL_OPTS) && \
	  $(MAKE) && $(MAKE) depend && $(MAKE) install

build/globus: build/tcl build/openssl
	mkdir -p $@ && cd ../../8.x/globus && \
	  export OPENSSL_CFLAGS="-I$(OUTDIR)/include" && \
	  export OPENSSL_LIBS="-L$(OUTDIR)/lib -lssl -lcrypto -ldl" && \
	  sh ./configure $(GLOBUS_OPTS) && \
	  $(MAKE) globus_gass_copy install

build/tdom: build/tcl
	mkdir -p $@ && cd $@ && CFLAGS="$(CFLAGS)" && export CFLAGS && \
	  sh $(EXTDIR)/tdom/configure $(STATIC) $(TCLDIR) $(TDOM_OPTS) && \
	  $(MAKE) install

build/tcllib: build/tcl
	mkdir -p $@ && cd $@ && CFLAGS="$(CFLAGS)" && export CFLAGS && \
	  sh $(EXTDIR)/tcllib/configure $(STATIC) $(TCLDIR) $(TCLLIB_OPTS) && \
	  $(MAKE) install-libraries

build/tclx: build/tcl
	mkdir -p $@ && cd $@ && CFLAGS="$(CFLAGS)" && export CFLAGS && \
	  sh $(EXTDIR)/tclx/configure $(STATIC) $(TCLDIR) $(TCLX_OPTS) && \
	  $(MAKE) install

build/starfish: build/tcl
	mkdir -p $@ && cd $@ && CFLAGS="$(CFLAGS)" && export CFLAGS && \
	  sh $(EXTDIR)/starfish/configure $(STATIC) $(TCLDIR) $(STARFISH_OPTS) && \
	  $(MAKE) && cp libstarfish1*$A $(OUTDIR)/lib && \
	  cd $(OUTDIR)/lib && mkdir -p starfish1.0 && \
	  mv libstarfish1*$A starfish1.0/ && \
	  cp -r $(EXTDIR)/starfish/tcl/*.tcl starfish1.0/

tidy: cleanext
	rm -rf build/tcl

cleanext:
	rm -rf build/tclvfs build/thread build/*.o
	rm -rf build/lib/vfs* build/lib/thread*

clean:
	rm -rf build kit-cli$(EXE)

distclean: clean
	rm -f tclkit-cli$(EXE)

.PHONY: all clean distclean tidy

$(OUTDIR)/zvfs$O: ../../zvfs.c
	$(CC) -o $@ $(CFLAGS) -DSTDC_HEADERS=1 -DHAVE_UNISTD_H=1 -DSTATIC_BUILD -Ibuild/include -I../tcl/compat/zlib -c $<

$(OUTDIR)/g2lite$O: ../../g2lite.c
	$(CC) -o $@ $(CFLAGS) -DSTATIC_BUILD -Ibuild/include -c $<

$(OUTDIR)/gssctx$O: ../../gssctx.c
	$(CC) -o $@ $(CFLAGS) -DSTATIC_BUILD -Ibuild/include \
	  -Ibuild/include/globus -Ibuild/include/globus/gcc64 -c $<

$(OUTDIR)/tclAppInit$O: ../tcl/$(PLAT)/tclAppInit.c
	$(CC) -o $@ $(CFLAGS) -DSTATIC_BUILD -Ibuild/include \
	  -DTCL_LOCAL_APPINIT=TclKit_AppInit -c $<
